class NewsGenerator < Rails::Generators::Base
  source_root File.expand_path("templates", __dir__)

  def create_news_clips
    generate "scaffold", "NewsClips publication:string headline:string publication_date:date url:string youtube_id:string"
    rails_command "db:migrate"
  end

  def copy_templates
    directory "app", force: true
    directory "test", force: true

    # remove unused files generated by the scaffold
    remove_file "app/views/news_clips/_form.html.erb"
    remove_file "app/views/news_clips/_issue.html.erb"
    remove_file "app/views/news_clips/_issue.json.jbuilder"
    remove_file "app/views/news_clips/edit.html.erb"
    remove_file "app/views/news_clips/index.json.jbuilder"
    remove_file "app/views/news_clips/new.html.erb"
    remove_file "app/views/news_clips/show.json.jbuilder"

    # remove the default routes and add namespaced routes
    gsub_file "config/routes.rb", 'resources :news_clips', ''.squish

    inject_into_file "config/routes.rb", after: "  # Additional resources...\n" do <<-EOF
  # Issues
  resources :news_clips, only: [:index, :show]
  namespace :admin do
    resources :news_clips
  end
  get "/news", to: "news_clips#index", as: "news"
    EOF
    end

    inject_into_file 'config/locales/en.yml', after: "  # Add additional policy messages here...\n" do <<-EOF
    news_clip_policy:
      index?: "You don't have permission to update news clips."
      show?: "You don't have permission to update news clips."
      create?: "You don't have permission to update news clips."
      new?: "You don't have permission to update news clips."
      update?: "You don't have permission to update news clips."
      edit?: "You don't have permission to update news clips."
      destroy?: "You don't have permission to update news clips."
    EOF
    end


    inject_into_file 'config/locales/en.yml', after: "  # Add messages for additional resources here...\n" do <<-EOF
  news_clips:
      create:
        success: "Your news clip was successfully created."
      delete:
        success: "This news clip has been deleted."
      update:
        success: "Your news clip was updated."
    EOF
    end

    inject_into_file 'app/views/layouts/shared/admin/_sidebar_menu.html.erb', after: "  <!-- Additional menu items... -->\n" do <<-EOF
    <%= link_to admin_issues_path, class: "group flex items-center px-2 py-2 text-sm leading-5 font-medium text-gray-600 rounded-md hover:text-gray-900 hover:bg-gray-50 focus:outline-none focus:text-gray-900 focus:bg-gray-50 transition ease-in-out duration-150" do %>
      <!-- Heroicon name: newspaper -->
      <svg class="mr-3 h-6 w-6
      <% if current_page?(admin_issues_path) %>
        text-gray-500
      <% else %>
        text-gray-400
      <% end %>
      text-gray-400 group-hover:text-gray-500 group-focus:text-gray-500 transition ease-in-out duration-150" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
      </svg>
      News
    <% end %>
    EOF
    end
  end

  def commit_changes
    # Commit everything to git
    unless ENV["SKIP_GIT"]
      git add: "."
      # git commit will fail if user.email is not configured
      begin
        git commit: %( -m "Adding News Clips feature" )
      rescue StandardError => e
        puts e.message
      end
    end
  end

  def confirm_success
    rails_command "test:all"
    say
    say "The news clips feature is now set up. Tests should still be green if everything was installed correctly.", :green
    say
  end

end
